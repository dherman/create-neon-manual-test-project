name: Build

on:
  workflow_call:
    inputs:
      ref:
        description: 'The branch, tag, or SHA to check out'
        required: true
        type: string
      update-version:
        description: 'Update version before building?'
        required: false
        type: boolean
        default: false
      version:
        description: 'Version update (ignored if update-version if false)'
        required: false
        type: string
        default: 'patch'
      github-release:
        description: 'Publish GitHub release?'
        required: false
        type: boolean
        default: false
      tag:
        description: 'The release tag (ignored if github-release is false)'
        required: false
        type: string
        default: ''

jobs:
  matrix:
    name: Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.result }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: Set Environment Variables
        uses: falti/dotenv-action@v1
        with:
          path: ./.github/workflows/.env
          export-variables: true
          keys-case: bypass
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY }}
          cache: npm
      - name: Install Dependencies
        shell: bash
        run: npm ci
      - name: Look Up Matrix Data
        id: matrixData
        shell: bash
        run: echo "json=$(npx neon ci github | jq -rc)" >> "$GITHUB_OUTPUT"
      - name: Compute Matrix
        id: matrix
        uses: actions/github-script@v7
        with:
          script: |
            const platforms = ${{ steps.matrixData.outputs.json }};
            const macOS = platforms.macOS.map(platform => {
              return { os: "macos-latest", platform, cross: false };
            });
            const windows = platforms.Windows.map(platform => {
              return { os: "windows-latest", platform, cross: false };
            });
            const linux = platforms.Linux.map(platform => {
              return { os: "ubuntu-latest", platform, cross: true };
            });
            return [...macOS, ...windows, ...linux];

  binaries:
    name: Binaries
    needs: [matrix]
    strategy:
      matrix:
        cfg: ${{ fromJSON(needs.matrix.outputs.matrix) }}
    runs-on: ${{ matrix.cfg.os }}
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
      - name: Set Environment Variables
        uses: falti/dotenv-action@v1
        with:
          path: ./.github/workflows/.env
          export-variables: true
          keys-case: bypass
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY }}
          cache: npm
      - name: Install Dependencies
        shell: bash
        run: npm ci
      - name: Update Version
        if: ${{ inputs.update-version }}
        shell: bash
        run: |
          git config --global user.name $ACTIONS_USER
          git config --global user.email $ACTIONS_EMAIL
          npm version ${{ inputs.version }} -m "v%s"
      - name: Build
        uses: neon-actions/build@v0.9
        with:
          node-version: ${{ env.NODE_VERSION }}
          use-cross: ${{ !!matrix.cfg.cross }}
          platform: ${{ matrix.cfg.platform }}
      - name: Release
        if: ${{ inputs.github-release }}
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/${{ steps.build.outputs.filename }}
          tag_name: ${{ inputs.tag }}

  main:
    name: Main
    needs: [matrix]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          fetch-depth: 0
      - name: Set Environment Variables
        uses: falti/dotenv-action@v1
        with:
          path: ./.github/workflows/.env
          export-variables: true
          keys-case: bypass
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY }}
          cache: npm
      - name: Install Dependencies
        shell: bash
        run: npm ci
      - name: Pack
        id: pack
        shell: bash
        run: |
          mkdir -p dist
          echo "filename=$(npm pack --pack-destination=./dist)" >> $GITHUB_OUTPUT
      - name: Release
        if: ${{ inputs.github-release }}
        uses: softprops/action-gh-release@v1
        with:
          files: ./dist/${{ steps.build.outputs.filename }}
          tag_name: ${{ inputs.tag }}
